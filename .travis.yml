language: python

python:
    - 2.7
    - 3.4
    - 3.5

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds, which can no longer
# be installed with sudo apt-get.
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        # We run the tests in 'boxed' mode, i.e. one subprocess per test,
        # because there are memory leaks in Astropy that currently cause the
        # memory to go up to levels that cause the tests to be slow.
        - SETUP_CMD='test -a "--boxed"'
        - NUMPY_VERSION=1.10
        - ASTROPY_VERSION=stable
        - CONDA_DEPENDENCIES='matplotlib aplpy'
        - CONDA_CHANNELS='astropy-ci-extras astropy'
        - PIP_DEPENDENCIES='pytest-xdist pvextractor'
        - SETUP_XVFB=True

    matrix:
        # - SETUP_CMD='egg_info'
        # - # run with default settings
        # - ASTROPY_VERSION='development'
        # - CONDA_DEPENDENCIES='' PIP_DEPENDENCIES='pytest-xdist'

matrix:
    include:

        # # Do a coverage test in Python 2.
        # # make sure *everything* is run for coverage tests
        # - python: 2.7
        #   env: SETUP_CMD='test --coverage'
        #        CONDA_DEPENDENCIES='matplotlib aplpy yt bottleneck'
        #        ASTROPY_VERSION='development'
        #        PIP_DEPENDENCIES='https://github.com/radio-astro-tools/radio_beam/archive/master.zip pytest-xdist pvextractor'

        # # Check for sphinx doc build warnings - we do this first because it
        # # may run for a long time
        # - python: 2.7
        #   env: SETUP_CMD='build_sphinx -w'

        # # Try older numpy versions
        # - python: 2.7
        #   env: NUMPY_VERSION=1.9
        # #We need nanmedian.  <=1.8 deprecated
        # # - python: 2.7
        # #   env: NUMPY_VERSION=1.8

        # # Test with bottleneck
        # - python: 2.7
        #   env: NUMPY_VERSION=1.9 CONDA_DEPENDENCIES='matplotlib aplpy bottleneck'
        # - python: 3.4
        #   env: NUMPY_VERSION=1.9 CONDA_DEPENDENCIES='matplotlib aplpy bottleneck'
        # 
        # # Test with radio-beam
        # - python: 2.7
        #   env:
        #       PIP_DEPENDENCIES='https://github.com/radio-astro-tools/radio_beam/archive/master.zip pytest-xdist pvextractor'
        #       ASTROPY_VERSION='development'
        # - python: 3.5
        #   env:
        #       PIP_DEPENDENCIES='https://github.com/radio-astro-tools/radio_beam/archive/master.zip pytest-xdist pvextractor'
        #       ASTROPY_VERSION='development'

        - python: 2.7
          env:
              SETUP_CMD='test'
              CASA_URL='https://casa.nrao.edu/download/distro/linux/release/el7/casa-release-4.7.2-el7.tar.gz'
              PYPATH=~/.casa/lib/python2.7/site-packages
              CONDA_DEPENDENCIES='matplotlib aplpy'

        # known not to be able to install astropy
        #- python: 2.7
        #  casa: 4.6.0
        #  env: 
        #      CASA_URL='https://svn.cv.nrao.edu/casa/distro/linux/release/el6/casa-release-4.6.0-el6.tar.gz'

        # also can't install astropy
        #- python: 2.7
        #  casa: monthlies
        #  env:
        #      # TODO: write script to retrieve latest
        #      CASA_URL='https://svn.cv.nrao.edu/casa/distro/linux/monthly/el6/casa-monthly-4.7.16.tar.gz'


install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh
    - if [[ $CASA_URL ]]; then curl $CASA_URL | tar -xz; CASA_BIN=$PWD/`basename $CASA_URL .tar.gz`/bin/casa; CASA_CONFIG=${CASA_BIN}-config; fi
    - if [[ $CASA_BIN ]]; then wget --no-check-certificate https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9; fi
    - if [[ $CASA_BIN ]]; then wget --no-check-certificate https://pypi.python.org/packages/e3/e4/4bd88bce765d8156091235d8747d8878d764bcd78180294bed0a2d003654/astropy-1.3.2.tar.gz#md5=c597c68e4392a82f90a9cb22c3b28628; fi
    - if [[ $CASA_BIN ]]; then wget --no-check-certificate https://pypi.python.org/packages/a5/16/8a678404411842fe02d780b5f0a676ff4d79cd58f0f22acddab1b392e230/numpy-1.12.1.zip#md5=c75b072a984028ac746a6a332c209a91; fi
    - if [[ $CASA_BIN ]]; then ${CASA_CONFIG} --exec python .install_pip.py; fi
    - if [[ $CASA_BIN ]]; then ${CASA_CONFIG} --exec python .install_astropy.py; fi
    - if [[ $CASA_BIN ]]; then ${CASA_CONFIG} --exec python .import_astropy.py; fi

script:
    - if [[ $SETUP_CMD != egg_info ]]; then cd spectral_cube/tests/data ; make ; cd ../../../; fi
    - python setup.py $SETUP_CMD
    - if [[ $CASA_BIN ]]; then PYTHONPATH=$PYPATH $CASA_CONFIG --exec python setup.py $SETUP_CMD; fi

after_success:
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='spectral_cube/tests/coveragerc'; fi
